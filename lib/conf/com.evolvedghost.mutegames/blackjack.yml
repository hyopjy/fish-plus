# 自定义指令触发21点
# 请注意，该自定义指令的更改必须重启Mirai
alias: 
  - 21点
# 自定义指令触发21点的开始指令
# 该自定义指令的更改不必重启Mirai，可插件内reload
# 英文请使用小写字母
aliasStart: 
  - 开始
  - start
# 自定义指令触发21点的拿牌指令
# 该自定义指令的更改不必重启Mirai，可插件内reload
# 英文请使用小写字母
aliasAdd: 
  - 拿牌
  - add
# 自定义指令触发21点的停牌指令
# 该自定义指令的更改不必重启Mirai，可插件内reload
# 英文请使用小写字母
aliasStop: 
  - 停牌
  - stop
# 自定义指令触发21点的投降指令
# 该自定义指令的更改不必重启Mirai，可插件内reload
# 英文请使用小写字母
aliasGiveUp: 
  - 投降
  - 放弃
  - giveup
# 自定义指令触发21点的看牌指令
# 该自定义指令的更改不必重启Mirai，可插件内reload
# 英文请使用小写字母
aliasCheck: 
  - 看牌
  - check
# 自定义指令触发21点的帮助指令
# 该自定义指令的更改不必重启Mirai，可插件内reload
# 英文请使用小写字母
aliasHelp: 
  - 帮助
  - help
# 输家禁言倍率，计算方式：倍率×(21-输家所持点数)秒
loserMultiplier: 30
# 爆牌禁言倍率，计算方式：倍率×21秒
bustMultiplier: 30
# 投降禁言倍率，计算方式：倍率×(21-投降者当前所持点数)秒
giveUpMultiplier: 15
# 发起者开始后如没开局自动关闭回合时间(秒)
autoCloseRoundTimer: 300
# 开始后自动停牌时间(秒)
autoFinishRoundTimer: 300
# 发起信息，可用替代项目为:
# <timeout-s> 超时时间（单位秒）（例:5）
# <timeout-f> 超时时间（例:11天4时5分14秒）
# <target> @触发人
messageOpenRound: '<target> 发起了一局21点，等待各位的入局'
# 发起信息，可用替代项目为:
# <target> @触发人
messageStart: '<target> 开启了本轮21点'
# 初始牌组，将接在发起信息之后，可用替代项目为:
# <owner> @拥有人
# <cardlist> 当前牌组
messageStartCardList: '<owner> <cardlist>'
# 发起的21点被自动关闭信息，可用替代项目为:
# <timeout-s> 超时时间（单位秒）（例:5）
# <timeout-f> 超时时间（例:11天4时5分14秒）
# <target> @触发人
messageAutoClose: '因为超过<timeout-f>，<target>的21点被关闭'
# 21点结束信息，可用替代项目为:
# <target> @发起人
messageFinish: '<target> 发起的本轮21点结束'
# 发起的21点被自动结束信息，可用替代项目为:
# <timeout-s> 超时时间（单位秒）（例:5）
# <timeout-f> 超时时间（例:11天4时5分14秒）
# <target> @发起人
messageAutoFinish: '因为超过<timeout-f>，<target> 发起的本轮21点结束'
# 投降放弃信息，可用替代项目为:
# <bantime-s> 禁言时间（单位秒）（例:5）
# <bantime-f> 禁言时间（例:11天4时5分14秒）
# <target> @触发人
# <cardlist> 当前牌组
messageGiveUp: "<target> 放弃了本轮，获得禁言时长：<bantime-f>\n牌组：<cardlist>"
# 爆牌信息，可用替代项目为:
# <bantime-s> 禁言时间（单位秒）（例:5）
# <bantime-f> 禁言时间（例:11天4时5分14秒）
# <target> @触发人
# <cardlist> 当前牌组
messageBust: "<target> 爆牌，获得禁言时长：<bantime-f>\n牌组：<cardlist>"
# 输掉信息，将接在结束信息之后，可用替代项目为:
# <bantime-s> 禁言时间（单位秒）（例:5）
# <bantime-f> 禁言时间（例:11天4时5分14秒）
# <target> @触发人
# <cardlist> 当前牌组
messageLose: "<target> 输了，禁言<bantime-f>\n牌组：<cardlist>"
# 发起信息，将接在结束信息之后，可用替代项目为:
# <target> @触发人
# <cardlist> 当前牌组
messageWin: "<target> 赢得了此轮21点\n牌组：<cardlist>"
# 拿牌信息，可用替代项目为:
# <getcard-t> 拿到的牌面（例：♥A）
# <getcard-n> 拿到的牌值（例：1）
# <cardlist> 当前牌组
# <target> @触发人
messageAddCard: "<target> 拿到了[<getcard-t>]\n当前牌组：<cardlist>"
# 牌组信息，代替上面的<cardlist>，可用替代项目为:
# <card> 牌
# <total> 总值
subMessageCardList: '(<total>)<card>'
# 牌组信息，代替上面的<card>，多张牌会重复多次，可用替代项目为:
# <card-t> 拿到的牌面（例：♥A）
# <card-n> 拿到的牌值（例：1）
subMessageCardListMessage: '[<card-t>]'